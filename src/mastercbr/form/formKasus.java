/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mastercbr.form;

import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.DefaultCellEditor;
import javax.swing.JFrame;
import javax.swing.JPanel;
import mastercbr.table.Gejala;
import mastercbr.table.Kasus;

/**
 *
 * @author SEED
 */
public class formKasus extends JPanel {
    
    public formKasus() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("MasterCBRPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT k FROM Kasus k");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT g FROM Gejala g");
        list1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query1.getResultList());
        list2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query1.getResultList());
        jDialog2 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        newButton = new javax.swing.JButton();
        query2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Penyakit p");
        list3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query2.getResultList());
        jComboBox1 = new javax.swing.JComboBox<>();
        jDialog3 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        formDiagnosa = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        list4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query2.getResultList());
        list5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        FormListener formListener = new FormListener();

        jDialog1.setTitle("Gejala");
        jDialog1.setMinimumSize(new java.awt.Dimension(400, 300));
        jDialog1.getContentPane().setLayout(new javax.swing.BoxLayout(jDialog1.getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jButton4.setText("SIMPAN");
        jButton4.addActionListener(formListener);
        jPanel2.add(jButton4);

        jButton3.setText("TUTUP");
        jButton3.addActionListener(formListener);
        jPanel2.add(jButton3);

        jDialog1.getContentPane().add(jPanel2);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list1, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idGejala}"));
        columnBinding.setColumnName("Id Gejala");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${namaGejala}"));
        columnBinding.setColumnName("Nama Gejala");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pilihan}"));
        columnBinding.setColumnName("Pilihan");
        columnBinding.setColumnClass(Boolean.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        jDialog1.getContentPane().add(jScrollPane1);

        jDialog2.setTitle("Gejala");
        jDialog2.setMinimumSize(new java.awt.Dimension(400, 300));
        jDialog2.getContentPane().setLayout(new javax.swing.BoxLayout(jDialog2.getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jButton6.setText("TUTUP");
        jButton6.addActionListener(formListener);
        jPanel3.add(jButton6);

        jDialog2.getContentPane().add(jPanel3);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list2, jTable2);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idGejala}"));
        columnBinding.setColumnName("Id Gejala");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${namaGejala}"));
        columnBinding.setColumnName("Nama Gejala");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTable2);

        jDialog2.getContentPane().add(jScrollPane2);

        newButton.setText("New");
        newButton.addActionListener(formListener);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list3, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        jDialog3.setTitle("Form Diagnosa Gejala");
        jDialog3.setMinimumSize(new java.awt.Dimension(400, 300));
        jDialog3.getContentPane().setLayout(new javax.swing.BoxLayout(jDialog3.getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jButton8.setText("PROSES");
        jButton8.addActionListener(formListener);
        jPanel4.add(jButton8);

        jButton9.setText("TUTUP");
        jButton9.addActionListener(formListener);
        jPanel4.add(jButton9);

        jDialog3.getContentPane().add(jPanel4);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list1, jTable3);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idGejala}"));
        columnBinding.setColumnName("Id Gejala");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${namaGejala}"));
        columnBinding.setColumnName("Nama Gejala");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pilihan}"));
        columnBinding.setColumnName("Pilihan");
        columnBinding.setColumnClass(Boolean.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane3.setViewportView(jTable3);

        jDialog3.getContentPane().add(jScrollPane3);

        formDiagnosa.setMinimumSize(new java.awt.Dimension(1080, 720));
        formDiagnosa.getContentPane().setLayout(new javax.swing.BoxLayout(formDiagnosa.getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jButton10.setText("SIMPAN KASUS BARU");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable5, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton10, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton10.addActionListener(formListener);
        jPanel5.add(jButton10);

        jButton11.setText("TUTUP");
        jPanel5.add(jButton11);

        formDiagnosa.getContentPane().add(jPanel5);

        jTable4.setAutoCreateRowSorter(true);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list4, jTable4);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idGejala}"));
        columnBinding.setColumnName("Id Gejala");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${namaGejala}"));
        columnBinding.setColumnName("Nama Gejala");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${keterangan}"));
        columnBinding.setColumnName("Keterangan");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane4.setViewportView(jTable4);

        formDiagnosa.getContentPane().add(jScrollPane4);

        jTable5.setAutoCreateRowSorter(true);
        jTable5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable5.getTableHeader().setReorderingAllowed(false);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list5, jTable5);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idKasus}"));
        columnBinding.setColumnName("Id Kasus");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${similiarity}"));
        columnBinding.setColumnName("Similiarity");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${gejalaList}"));
        columnBinding.setColumnName("List Gejala");
        columnBinding.setColumnClass(java.util.List.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit.idPenyakit}"));
        columnBinding.setColumnName("ID Penyakit");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit.namaPenyakit}"));
        columnBinding.setColumnName("Nama Penyakit");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit.solusi}"));
        columnBinding.setColumnName("Solusi Penyakit");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien}"));
        columnBinding.setColumnName("ID Pasien");
        columnBinding.setColumnClass(mastercbr.table.Pasien.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien.nama}"));
        columnBinding.setColumnName("Nama Pasien");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien.kelompokUmur}"));
        columnBinding.setColumnName("Kelompok Umur");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane5.setViewportView(jTable5);

        formDiagnosa.getContentPane().add(jScrollPane5);

        setLayout(new java.awt.BorderLayout());

        masterTable.setAutoCreateRowSorter(true);
        masterTable.setRowHeight(30);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idKasus}"));
        columnBinding.setColumnName("Id Kasus");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${gejalaList}"));
        columnBinding.setColumnName("Gejala List");
        columnBinding.setColumnClass(java.util.List.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis}"));
        columnBinding.setColumnName("Rekam Medis");
        columnBinding.setColumnClass(mastercbr.table.RekamMedis.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.tanggalKonsultasi}"));
        columnBinding.setColumnName("Tanggal Konsultasi");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien.idPasien}"));
        columnBinding.setColumnName("Pasien ID");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien.nama}"));
        columnBinding.setColumnName("Nama Pasien");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rekamMedis.pasienIdPasien.kelompokUmur}"));
        columnBinding.setColumnName("Kelompok Umur Pasien");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit}"));
        columnBinding.setColumnName("Penyakit ID");
        columnBinding.setColumnClass(mastercbr.table.Penyakit.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit.namaPenyakit}"));
        columnBinding.setColumnName("Nama Penyakit");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${penyakitIdPenyakit.solusi}"));
        columnBinding.setColumnName("Solusi Penyakit");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${revisi}"));
        columnBinding.setColumnName("Revisi");
        columnBinding.setColumnClass(Boolean.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(this.jComboBox1));

        add(masterScrollPane, java.awt.BorderLayout.CENTER);

        jButton7.setText("DIAGNOSA");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton7, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton7.addActionListener(formListener);
        jPanel1.add(jButton7);

        saveButton.setText("SIMPAN");
        saveButton.addActionListener(formListener);
        jPanel1.add(saveButton);

        refreshButton.setText("REFRESH");
        refreshButton.addActionListener(formListener);
        jPanel1.add(refreshButton);

        deleteButton.setText("HAPUS KASUS");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);
        jPanel1.add(deleteButton);

        jButton1.setText("SET GEJALA");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(formListener);
        jPanel1.add(jButton1);

        jButton2.setText("LIHAT GEJALA");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);
        jPanel1.add(jButton2);

        jButton5.setText("FILTER KASUS");
        jButton5.addActionListener(formListener);
        jPanel1.add(jButton5);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SEMUA", "LAMA", "BARU" }));
        jPanel1.add(jComboBox2);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButton7) {
                formKasus.this.jButton7ActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                formKasus.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                formKasus.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                formKasus.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                formKasus.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                formKasus.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                formKasus.this.jButton5ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                formKasus.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                formKasus.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                formKasus.this.jButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                formKasus.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                formKasus.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton9) {
                formKasus.this.jButton9ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton10) {
                formKasus.this.jButton10ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        list5.clear();
        list5.addAll(data);
        java.util.Collection data2 = query2.getResultList();
        for (Object entity : data2) {
            entityManager.refresh(entity);
        }
        list3.clear();
        list3.addAll(data2);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<mastercbr.table.Kasus> toRemove = new ArrayList<mastercbr.table.Kasus>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            mastercbr.table.Kasus k = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(k);
            entityManager.remove(k);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        mastercbr.table.Kasus k = new mastercbr.table.Kasus();
        entityManager.persist(k);
        list.add(k);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<mastercbr.table.Kasus> merged = new ArrayList<mastercbr.table.Kasus>(list.size());
            for (mastercbr.table.Kasus k : list) {
                merged.add(entityManager.merge(k));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jDialog1.show();
        jDialog1.setLocationRelativeTo(null);
        List<Gejala> resultList = query1.getResultList();
        resultList.forEach((Gejala object) -> {
            entityManager.refresh(object);
            object.setPilihan(false);
        });
        list1.clear();
        list1.addAll(resultList);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog2.hide();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jDialog2.show();
        jDialog2.setLocationRelativeTo(null);
        int selectedRow = masterTable.getSelectedRow();
        Kasus p = list.get(masterTable.convertRowIndexToModel(selectedRow));
        List<Long> listKeyGejala = p.getGejalaList();
        System.out.println("listKeyGejala = " + listKeyGejala);
        List<Gejala> resultList = query1.getResultList();
        resultList.forEach((Gejala object) -> {
            entityManager.refresh(object);
            object.setPilihan(false);
        });

        list2.clear();
        for (Long long1 : listKeyGejala) {
            Gejala find = entityManager.find(Gejala.class, long1);
            list2.add(find);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jDialog1.hide();
        list1.removeIf(a->!a.isPilihan());
        System.out.println("list1 = " + list1.size());
        List<Long> listKeyGejala = new LinkedList<>();
        list1.forEach((gejala) -> {
            listKeyGejala.add(gejala.getIdGejala());
        }); 
        System.out.println("listKeyGejala = " + listKeyGejala);
        int selectedRow = masterTable.getSelectedRow();
        Kasus p = list.get(masterTable.convertRowIndexToModel(selectedRow));
        System.out.println("p = " + p);
        p.setGejalaList(listKeyGejala);
        saveButtonActionPerformed(evt);
        refreshButtonActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int selectedIndex = jComboBox2.getSelectedIndex();
        System.out.println("selectedIndex = " + selectedIndex);
        if (selectedIndex == 0) {
            refreshButtonActionPerformed(evt);
        }
        if (selectedIndex == 1) {
            refreshButtonActionPerformed(evt);
            list.removeIf( a -> a.isRevisi());
        }
        if (selectedIndex == 2) {
            refreshButtonActionPerformed(evt);
            list.removeIf( a -> !a.isRevisi());
        }
        

                
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jDialog3.show();
        jDialog3.setLocationRelativeTo(null);
        List<Gejala> resultList = query1.getResultList();
        resultList.forEach((Gejala object) -> {
            entityManager.refresh(object);
            object.setPilihan(false);
        });
        list1.clear();
        list1.addAll(resultList);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jDialog3.hide();
        list1.removeIf(a->!a.isPilihan());
        System.out.println("list1 = " + list1.size());
        List<Long> listKeyGejala = new LinkedList<>();
        list1.forEach((gejala) -> {
            listKeyGejala.add(gejala.getIdGejala());
        }); 
        System.out.println("listKeyGejala = " + listKeyGejala);
        int selectedRow = masterTable.getSelectedRow();
        Kasus p = list.get(masterTable.convertRowIndexToModel(selectedRow));
        System.out.println("p = " + p);
        p.setGejalaList(listKeyGejala);
        

        list4.clear();
        listKeyGejala.stream().map((long1) -> 
            entityManager.find(Gejala.class, long1)).forEachOrdered((find) -> {
            list4.add(find);
        });

        list5.clear();
        list5.addAll(sorensonCoefficient(p, list));
        list5.remove(p);
        
        formDiagnosa.setTitle("Kasus Baru untuk -> ID :"
                + p.getRekamMedis().getPasienIdPasien().getIdPasien() 
                + "; Nama :"
                + p.getRekamMedis().getPasienIdPasien().getNama()
                + "; Kelompok Umur :"
                + p.getRekamMedis().getPasienIdPasien().getKelompokUmur()
                + "; Tgl Konsul :"
                + p.getRekamMedis().getTanggalKonsultasi().toString()
        );
        formDiagnosa.show();
//        saveButtonActionPerformed(evt);
    }//GEN-LAST:event_jButton8ActionPerformed
    public List<Kasus> sorensonCoefficient(Kasus Baru, List<Kasus> lama)
        {
            List<Gejala> resultList = query1.getResultList();
            int jumlahGejala = resultList.size();
            List<Long> gejalaListBaru = Baru.getGejalaList();
            for (Kasus kasusLama : lama) {
                int m11 = 0;
                int m10 = 0;
                int m01 = 0;
                int m00 = 0;
                List<Long> gejalaListLama = kasusLama.getGejalaList();
                for (Gejala gejala : resultList) {
                    Long idGejala = gejala.getIdGejala();
                    if (gejalaListBaru.contains(idGejala) && gejalaListLama.contains(idGejala)) {
                        m11++;
                    }
                    else if (gejalaListBaru.contains(idGejala))
                    {
                        m10++;
                    }
                    else if (gejalaListLama.contains(idGejala))
                    {
                        m01++;
                    }
                    else {
                        m00++;
                    }
                }
                
                System.out.println("kasus = " + kasusLama);
                double y = m11;
                y = y * 2d;
                double x = m11 + m10 + m01; 
                x = x * 2d;
                double temp = y / x;
                System.out.println("temp = " + temp);
                kasusLama.setSimiliarity(temp);
            }            
            return lama;
        }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jDialog3.hide();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int selectedRow = masterTable.getSelectedRow();
        Kasus p = list.get(masterTable.convertRowIndexToModel(selectedRow));
        System.out.println("p = " + p);
        
        int selectedRowKasus = jTable5.getSelectedRow();
        
        Kasus pilihan = list5.get(jTable5.convertRowIndexToModel(selectedRowKasus));
        System.out.println("pilihan = " + pilihan);
        System.out.println("pilihan Penyakit= " + pilihan.getPenyakitIdPenyakit());
        p.setPenyakitIdPenyakit(pilihan.getPenyakitIdPenyakit());
        p.setRevisi(true);
        saveButtonActionPerformed(evt);
        refreshButtonActionPerformed(evt);
        formDiagnosa.hide();
    }//GEN-LAST:event_jButton10ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JDialog formDiagnosa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private java.util.List<mastercbr.table.Kasus> list;
    private java.util.List<mastercbr.table.Gejala> list1;
    private java.util.List<mastercbr.table.Gejala> list2;
    private java.util.List<mastercbr.table.Penyakit> list3;
    private java.util.List<mastercbr.table.Gejala> list4;
    private java.util.List<mastercbr.table.Kasus> list5;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.persistence.Query query1;
    private javax.persistence.Query query2;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formKasus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formKasus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formKasus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formKasus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new formKasus());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
